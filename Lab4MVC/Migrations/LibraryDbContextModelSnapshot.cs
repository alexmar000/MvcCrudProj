// <auto-generated />
using System;
using Lab4MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab4MVC.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab4MVC.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ISBNNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Fyodor Dostojevskij",
                            ISBNNumber = 10032910265L,
                            Title = "Bröderna Karamazov"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Haruki Murakami",
                            ISBNNumber = 9328172321L,
                            Title = "The Wind-Up Bird Chronicle"
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            ISBNNumber = 54213216738L,
                            Title = "1984"
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Lysekilsvägen 12",
                            FirstName = "Johan",
                            LastName = "Hultkvist",
                            PhoneNumber = "0703272138"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Storgatan 23A",
                            FirstName = "Omar",
                            LastName = "Asaad",
                            PhoneNumber = "0721472131"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kungsholmsvägen 2",
                            FirstName = "Philippa",
                            LastName = "Myrdahl",
                            PhoneNumber = "0701435013"
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.CustomerBorrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerBorrowings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowDate = new DateTime(2021, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            IsReturned = false
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            BorrowDate = new DateTime(2021, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            IsReturned = true
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            BorrowDate = new DateTime(2021, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            IsReturned = false
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            BorrowDate = new DateTime(2020, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            IsReturned = false
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            BorrowDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            IsReturned = true
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.CustomerBorrowing", b =>
                {
                    b.HasOne("Lab4MVC.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab4MVC.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
